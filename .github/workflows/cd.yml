name: On Demand CD

on:
  push:
    tags: ["*"]

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend-on-demand
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm ci
      - name: Build the frontend
        run: npm run build
      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend-on-demand
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/frontend:${{ env.RELEASE_VERSION }}
  build_backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend-on-demand
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Setup graalvm
        uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 21.0.0
          native-image: true
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build backend
        run: ./mvnw -DskipTests -B package -Pnative
      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          file: ./backend-on-demand/src/main/docker/Dockerfile.native
          context: ./backend-on-demand
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:${{ env.RELEASE_VERSION }}
